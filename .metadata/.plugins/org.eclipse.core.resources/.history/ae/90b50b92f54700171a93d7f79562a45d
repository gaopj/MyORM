package gpj.orm.core;

import java.lang.reflect.Method;
import java.util.List;

import gpj.orm.bean.ColumnInfo;
import gpj.orm.bean.TableInfo;
import gpj.orm.utils.StringUtils;

/**
 * 负责针对mysql数据库的查询
 * @author gpj
 *
 */
public class MySqlQuery  implements Query{

	@Override
	public int executeDML(String sql, Object[] params) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void insert(Object obj) {
		//Emp.class,2==> delete from emp where id =2
		
		//通过class对象找TableInfo
		
		
	}

	@Override
	public void delete(Class clazz, Object id) {
		//通过Class对象找TableInfo
		TableInfo tableInfo= TableContext.poClassTableMap.get(clazz);
		
		//获得主键
		ColumnInfo onlyPriKey =   tableInfo.getOnlyPriKey();
		
		String sql = "delete from "+tableInfo.getTname()+" where "+onlyPriKey.getName()+"=? ";
		
		executeDML(sql,  new Object[]{id});
	}

	@Override
	public void delete(Object obj) {
		Class c =obj.getClass();
		TableInfo tableInfo= TableContext.poClassTableMap.get(c);
		ColumnInfo onlyPriKey =   tableInfo.getOnlyPriKey();//获得主键
		
		//通过反射机制，调用属性对应的get和set
		try {
			Method m = c.getMethod("get"+StringUtils.firstChar2UpperCase(onlyPriKey.getName()),null);
			Object priKeyValue= m.invoke(obj, null);
			
			delete(c, priKeyValue);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	@Override
	public int update(Object obj, String[] fielNames) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List queryRows(String sql, Class clazz, Object[] params) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object queryUnityRows(String sql, Class clazz, Object[] params) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object queryValue(String sql, Object[] params) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Number queryNumber(String sql, Object[] params) {
		// TODO Auto-generated method stub
		return null;
	}

}
